<p>{{{proposition}}}</p>
{{{search}}}
{{#hasKnwlPanel}}
  <aside>
    <h2>{{knwlPanel.title}}</h2>
    <p class="subtitle">{{knwlPanel.subtitle}}</p>
    <p>{{knwlPanel.desc}}</p>
    {{#knwlPanel.infos}}
      <p><b>{{title}}</b>{{{content}}}</p>
    {{/knwlPanel.infos}}
    {{#knwlPanel.additionalInfos}}
      <div>
        <h3>{{title}}</h3>
        {{#isQuotes}}
          <div>
            {{#quotes}}
              <i class="quote-add-info">{{.}}</i>
            {{/quotes}}
          </div>
        {{/isQuotes}}
        {{#isWorks}}
          <div>
            {{#works}}
              <a href="{{link}}" class="work-add-info">{{work}}</a>
            {{/works}}
          </div>
        {{/isWorks}}
        {{#isCritics}}
          <div>
            {{#critics}}
              <div class="critic-add-info">
                <div>
                  {{critic}}
                  <a href="{{link}}">...</a>
                </div>
                <div>
                  <img id="{{icon}}" src="data:;base64,R0lGODlhAQABAPAAAP///wAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw" alt="{{name}}">
                  <a href="{{link}}">{{name}}</a>
                </div>
              </div>
            {{/critics}}
          </div>
        {{/isCritics}}
        {{#isPlatform}}
          <div>
            {{#platforms}}
              <div class="platform-add-info">
                <img id="{{icon}}" src="data:;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAEUlEQVR42mNkIAAYRxWMJAUAE5gAEdz4t9QAAAAASUVORK5CYII=" alt="{{platform}}">
                <a href="{{link}}">{{platform}}</a>
              </div>
            {{/platforms}}
          </div>
        {{/isPlatform}}
        {{#isNormal}}
          <div>
            <div class="normal-add-info">
              {{#elements}}
                <a href="{{link}}">
                  <img src="data:;base64,R0lGODlhAQABAPAAAP///wAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw" alt="{{title}}" id="{{ID}}">
                </a>
              {{/elements}}
            </div>
            <div class="normal-add-info">
              {{#elements}}
                <a href="{{link}}">
                  <h4>{{title}}</h4>
                  <h5>{{subtitle}}</h5>
                </a>
              {{/elements}}
            </div>
          </div>
        {{/isNormal}}
      </div>
    {{/knwlPanel.additionalInfos}}
  </aside>
{{/hasKnwlPanel}}
<main>
  <article>
    <a class="link-title" href="{{firstResult.link}}">{{firstResult.title}}</a>
    <br />
    <a class="link" href="{{firstResult.link}}">{{firstResult.shownLink}}</a>
    <p class="link-text">{{firstResult.desc}}
    </p>
    <div class="sub-results">
      {{#firstResults}}
        <article>
          <a class="link-title" href="{{link}}">{{title}}</a>
          <p class="link-text">{{desc}}</p>
        </article>
      {{/firstResults}}
    </div>
  </article>
  {{#hasQuickAnswers}}
    <article class="quick-answers">
      {{#quickAnswers}}
        <button>+</button>
        <p>{{question}}</p>
        <div>{{{answer}}}</div>
      {{/quickAnswers}}
    </article>
  {{/hasQuickAnswers}}
  {{#results}}
    <article>
      <a class="link-title" href="{{link}}">{{title}}</a>
      <br />
      <a class="link" href="{{link}}">{{shownLink}}</a>
      <p class="link-text">{{desc}}</p>
    </article>
  {{/results}}
</main>
{{{menu}}}
{{{navigation}}}

<script>
  //Get images
  const IMGs = {{{ stringedIMGs }}}
  IMGs.forEach(el => document.querySelector('#' + el[1]) != null ? document.querySelector('#' + el[1]).setAttribute('src', el[0]) : null)

  //Quick answers
  document.querySelectorAll('.u9iNfb').forEach(el => el.remove())
  document.querySelectorAll('.quick-answers>div').forEach(el => {
    el.style.visibility = 'hidden'
    el.style.height = '0'
  })
  function toggle(el, which) {
    let responseStyle = ''
    which === 0 ? responseStyle = el.nextElementSibling.nextElementSibling.style : responseStyle = el.nextElementSibling.style
    if (responseStyle.visibility !== 'unset') {
      responseStyle.visibility = 'unset'
      responseStyle.height = 'unset'
      responseStyle.padding = '1rem'
      responseStyle.margin = '1rem'
      which === 0 ? el.textContent = '-' : el.previousElementSibling.textContent = '-'
    } else {
      responseStyle.visibility = 'hidden'
      responseStyle.height = '0'
      responseStyle.padding = '0'
      responseStyle.margin = '0'
      which === 0 ? el.textContent = '+' : el.previousElementSibling.textContent = '+'
    }
  }
  document.querySelectorAll('.quick-answers>button').forEach(el => el.addEventListener('mouseup', () => toggle(el, 0)))
  document.querySelectorAll('.quick-answers>p').forEach(el => el.addEventListener('mouseup', () => toggle(el, 1)))

  //Set Goodgle as default search engine
  if (!localStorage.getItem('added')) {
    //Detect the which browser is used
    const UA = navigator.userAgent
    let browser = ''
    if (UA.includes('Chrom')) UA.includes('Mobile') ? browser = 'Chrome Mobile' : browser = 'Chrome'
    if (UA.includes('Edg')) UA.includes('Mobile') ? browser = 'Edge Mobile' : browser = 'Edge'
    if (navigator.brave) UA.includes('Mobile') ? browser = 'Brave Mobile' : browser = 'Brave'
    if (UA.includes('OPR')) browser = 'Opera'
    if (UA.includes('Firefox')) {
      if (parseFloat(UA.split('x/')[1]) >= 89) browser = 'Firefox Proton'
      else if (UA.includes('Mobile')) browser = 'Firefox Mobile'
      else browser = 'Firefox'
    }
    if (browser === '') browser = 'unknown'
    //TODO: Vivaldi detection (doesn't seems possible)
    //TODO: Samsung mobile detection
    //TODO: Safari

    const instructions = {
      'Chrome': [
        'Go to <code>chrome://settings/searchEngines</code>, click on the three dots corresponding to your Goodgle instance and click on <code>Make default</code>.'
      ],
      'Chrome Mobile': [
        'Go to <code>Settings</code>, <code>Search engine</code>.',
        'Select Goodgle in the list.'
      ],
      'Edge': [
        'Go to <code>edge://settings/searchEngines</code>, click on the three dots corresponding to your Goodgle instance and click on <code>Make default</code>.'
      ],
      'Edge Mobile': [
        'Tap the three dots, go to <code>Settings</code>, <code>Search</code>, <code>Default search engine</code>.',
        'Select Goodgle in the list.'
      ],
      'Brave': [
        'Go to <code>brave://settings/searchEngines</code>, click on the three dots corresponding to your Goodgle instance and click on <code>Make default</code>.'
      ],
      'Brave Mobile': [
        'Tap the three dots, go to <code>Settings</code>, <code>Standard tab</code> and select Goodgle in the list.',
        'Go only step back, go to <code>Incognito Tab</code> and select Goodgle in the list.',
        'Go only step back, go to <code>Privacy and Security</code> and enable <code>Auto-complete searches and URLs</code>.'
      ],
      'Opera': [
        'Opera restricts custom search engine because of "Security reasons", it\'s a great opportunity to leave this "browser" and get one that respects your privacy.'
      ],
      'Firefox Proton': [
        'Right click the search-bar and click on <code>Add Search Engine</code>.',
        'Go to <code>about:preferences#search</code> and select Goodgle from the dropdown list.'
      ],
      'Firefox Mobile': [
        'Go to <code>Settings</code>, <code>Search</code> and <code>Add search engine</code>.',
        'Configure it as shown bellow, set "search string to use put" to <code>' + location.origin + '/search?q=%s</code> and validate.',
        'Select Goodgle in the list.'
      ],
      'Firefox': [
        'Click on the top-right three dots the search-bar and click on <code>Add "Goodgle"</code>.',
        'Go to <code>about:preferences#search</code> and select Goodgle from the dropdown list.'
      ],
      'unknown': [
        'Your browser may be supported but Goodgle doesn\'t recognize it, so Goodgle cannot show you instructions.'
      ]
    }
    //Set as default search engine button
    fetch(location.origin + '/cors?url=https://support.google.com/websearch/answer/464?hl=' + '{{lang}}')
      .then(res => res.text())
      .then(res => {
        const el = document.createElement('div')
        el.setAttribute('id', 'add')
        el.innerHTML = '<p>' + res.split('cc"><p>')[1].split('.')[0].replaceAll('Google', 'Goodgle') + '.</p><button>' + res.split('title>')[1].split(' -')[0].replace('Google', 'Goodgle') + '</button>'
        document.body.prepend(el)
        el.children[1].addEventListener('mouseup', () => {
          localStorage.setItem('instructions', instructions[browser])
          localStorage.setItem('browser', browser.toLowerCase().replace(' ', '_'))
          location.href = location.origin
        })
      })
  }
</script>