<form action="/search">
  <button type="button" id="home" aria-label="Home"></button>
  <input type="search" name="q" id="search-bar" value="{{query}}" spellcheck="false" autocomplete="off" aria-label="Goodgle Search" autofocus required />
  <input type="text" name="tab" value="all" id="tab" hidden />
  <input type="text" name="page" value="1" id="page" hidden />
  <button type="submit" id="search" aria-label="Search">
    <div></div>
  </button>
</form>
<div id="autocomplete"></div>

<script>
  const form = document.forms[0]
  const searchbar = form.elements['q']
  const autocomplete = document.querySelector('#autocomplete')
  const isMobile = window.innerWidth <= 1024

  //Search
  function search({ q, tab, page }) {
    if (q) searchbar.value = q
    form.elements['tab'].value = tab || new URLSearchParams(location.search).get('tab')
    form.elements['page'].value = page || new URLSearchParams(location.search).get('page')
    form.submit()
  }

  //Autocomplete
  function hide() {
    autocomplete.style.display = 'none'
    if (!isMobile) form.style.boxShadow = '0px 4px 24px rgba(0, 0, 0, .14), 0px 2px 12px rgba(0, 0, 0, .06)'
  }
  function show() {
    autocomplete.style.display = 'unset'
    if (!isMobile) form.style.boxShadow = 'unset'
  }
  function suggestions() {
    if (searchbar.value !== '') fetch(location.origin + '/autocomplete?q=' + searchbar.value)
      .then(res => res.json())
      .then(res => {
        autocomplete.innerHTML = ''
        show()
        res[1].forEach(el => autocomplete.innerHTML += '<a class="autocomplete">' + el + '</a>')
        if (res[1].length === 0) hide()
      })
    else hide()
  }
  searchbar.addEventListener('input', () => suggestions())
  document.addEventListener('mouseup', e => {
    //click on searchbar
    if (e.target === searchbar) {
      if (isMobile) {
        form.style.width = '100%'
        form.style.borderRadius = '0 0 1.5rem 1.5rem'
        form.style.setProperty('top', '0', 'important')
        autocomplete.style.setProperty('top', '0', 'important')
        autocomplete.style.width = '100%'
      }
      show()
      suggestions()
    }
    else if (e.target.id === 'home') location.href = location.origin //click on home button
    else if (e.target.className === 'autocomplete') search({ q: e.target.textContent }) //click on autocomplete propositions
    else if (e.target.className === 'menu') search({ page: 1, tab: e.target.getAttribute('data-tab') }) //click on menu
    //click outside
    else {
      if (isMobile) {
        form.style.width = '90%'
        form.style.borderRadius = '1.5rem'
        form.style.top = '1.5rem'
        autocomplete.style.width = '90%'
      }
      hide()
    }
  })
  //Key control
  let i = -1
  searchbar.addEventListener('keydown', e => {
    function select() {
      autocomplete.children[i].style.border = 'var(--border) solid .5px'
    }
    function unselect() {
      autocomplete.children[i].style.border = 'transparent solid .5px'
    }
    //Up key
    if (e.keyCode === 38) {
      if (i === -1) {
        i = autocomplete.children.length - 1
        select()
      } else {
        unselect()
        if (i !== 0) {
          i--
          select()
        } else {
          i = autocomplete.children.length - 1
          select()
        }
      }
    }
    //Down key
    if (e.keyCode === 40) {
      if (i !== -1) unselect()
      if (i !== autocomplete.children.length - 1) {
        i++
        select()
      } else {
        i = 0
        select()
      }
    }
    //Enter key
    if (e.keyCode === 13) if (i !== -1) search({ q: autocomplete.children[i].getAttribute('href').substring(10) })
    else search()

    //Escape key
    if (e.keyCode === 27) hide()
  })
</script>

<style>
  form {
    top: 1.5rem;
    left: 50%;
    transform: translateX(-50%);
    position: fixed;
    display: flex;
    width: 90%;
    text-align: center;
    border-radius: 100vw;
    box-shadow: 0px 4px 24px rgba(0, 0, 0, .14), 0px 2px 12px rgba(0, 0, 0, .06);
    height: 3rem;
    background: var(--white);
    z-index: 2;
    height: 15vw
  }

  #home {
    height: 2rem;
    width: 2rem;
    border: none;
    align-self: center;
    margin-left: 2%;
    cursor: pointer;
    background: url('goodgle.svg')
  }

  #search-bar {
    border-radius: 100vw;
    border: 0;
    width: 86%;
    margin-left: auto;
    margin-right: auto;
    text-align: center;
    font-size: 1.15rem;
    color: var(--darker);
    font-weight: bold;
    caret-color: var(--darker);
    background: none
  }

  #search {
    background: url('search.svg');
    height: 2rem;
    width: 2rem;
    border: 0;
    align-self: center;
    margin-right: 2%;
    cursor: pointer
  }

  #autocomplete {
    padding: 3.5rem .5rem .5rem .5rem;
    top: 1.5rem;
    left: 50%;
    transform: translateX(-50%);
    position: fixed;
    width: 90%;
    z-index: 1;
    box-shadow: 0px 4px 24px rgba(0, 0, 0, .14), 0px 2px 12px rgba(0, 0, 0, .06);
    background: var(--white);
    display: none;
    border-radius: 1.5rem
  }

  #autocomplete>a {
    display: block;
    padding: .1875rem 1rem;
    text-decoration: none;
    color: var(--darker);
    border: transparent solid .5px;
    border-radius: 1.5rem;
    font-weight: 600;
    cursor: pointer
  }

  #autocomplete>a:hover {
    border: var(--border) solid .5px
  }

  @media (min-width: 1024px) {

    form,
    #autocomplete {
      width: 40vw
    }

    form {
      height: 3.2rem
    }
  }
</style>